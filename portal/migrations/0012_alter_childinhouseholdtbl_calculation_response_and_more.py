# Generated by Django 5.2.6 on 2025-09-13 22:20

import django.core.validators
import multiselectfield.db.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('portal', '0011_alter_childinhouseholdtbl_child_identifier_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='calculation_response',
            field=models.CharField(blank=True, choices=[('both_correct', 'Yes, the child gave the right answer for both calculations'), ('one_correct', 'Yes, the child gave the right answer for one calculation'), ('wrong', 'No, the child does not know how to answer and gave wrong answers'), ('refused', 'The child refuses to try')], help_text='Response to the calculation task.', max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='child_accompanied_by_other',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Specify accompaniment (if Other is selected)'),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='child_birth_certificate_reason',
            field=models.CharField(blank=True, help_text='Provide a reason if the child does not have a birth certificate.', max_length=200, null=True, verbose_name='If no, please specify why'),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='child_can_be_surveyed',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='Answer Yes if the child is available for survey; No otherwise.', max_length=3, verbose_name='Can the child be surveyed now?'),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='child_country_of_birth',
            field=models.CharField(blank=True, choices=[('Benin', 'Benin'), ('BurkinaFaso', 'Burkina Faso'), ('IvoryCoast', 'Ivory Coast'), ('Mali', 'Mali'), ('Niger', 'Niger'), ('Togo', 'Togo'), ('Other', 'Other')], help_text="Provide this only if 'No, born in another country' is selected.", max_length=20, null=True, verbose_name='In which country is the child born?'),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='child_country_of_birth_other',
            field=models.CharField(blank=True, help_text='Use capital letters without special characters.', max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='Only capital letters, numbers, and spaces are allowed.', regex='^[A-Z0-9\\s]+$')], verbose_name='Specify country of birth (if Other)'),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='child_decision_maker_other',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Specify decision maker (if Other is selected)'),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='child_declared_in_cover',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='Yes if the child is already listed in the cover; No otherwise.', max_length=3, verbose_name="Is the child among those declared in the cover as the farmer's child?"),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='child_educated',
            field=models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], help_text='Is the child currently enrolled in school?', max_length=3, null=True),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='child_not_avail',
            field=models.CharField(blank=True, help_text='Provide reasons in capital letters.', max_length=200, null=True, verbose_name='Other reasons (in capital letters) for child not being available'),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='child_not_live_with_family_reason',
            field=models.CharField(blank=True, choices=[('ParentsDeceased', 'Parents deceased'), ('CantCare', "Can't take care of me"), ('Abandoned', 'Abandoned'), ('SchoolReasons', 'School reasons'), ('AgencyBrought', 'A recruitment agency brought me here'), ('DidNotWant', 'I did not want to live with my parents'), ('Other', 'Other')], max_length=50, null=True, verbose_name='Why does the child not live with his/her family?'),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='child_not_live_with_family_reason_other',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Other reason (if Other is selected)'),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='child_relationship_to_head_other',
            field=models.CharField(blank=True, help_text='Write in capital letters without special characters.', max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='Only capital letters, numbers, and spaces are allowed.', regex='^[A-Z0-9\\s]+$')], verbose_name='Specify relationship (if Other)'),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='child_schl2',
            field=models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], help_text='Has the child ever been to school (if not currently enrolled)?', max_length=3, null=True),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='child_unavailability_reason',
            field=models.CharField(blank=True, choices=[('school', 'The child is at school'), ('work_cocoa', 'The child has gone to work on the cocoa farm'), ('housework', 'Child is busy doing housework'), ('work_outside', 'Child works outside the household'), ('too_young', 'The child is too young'), ('sick', 'The child is sick'), ('travelled', 'The child has travelled'), ('play', 'The child has gone out to play'), ('sleeping', 'The child is sleeping'), ('other', 'Other reasons')], help_text='Select the reason if the child cannot be surveyed.', max_length=20, null=True, verbose_name='Reason for child not being surveyed'),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='education_level',
            field=models.CharField(blank=True, choices=[('pre_school', 'Pre-school (Kindergarten)'), ('primary', 'Primary'), ('jss', 'JSS/Middle school'), ('sss', "SSS/'O'-level/'A'-level (including vocational & technical training)"), ('university', 'University or higher'), ('not_applicable', 'Not applicable')], help_text='What is the education level of the child?', max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='missed_school',
            field=models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], help_text='Has the child missed school days in the past 7 days?', max_length=3, null=True),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='observed_work',
            field=models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], help_text='Did the enumerator observe the child working in a real situation?', max_length=3, null=True),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='performed_tasks',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('collect_fruits', 'Collect and gather fruits, pods, seeds after harvesting'), ('extract_cocoa', 'Extracting cocoa beans after shelling by an adult'), ('wash_items', 'Wash beans, fruits, vegetables or tubers'), ('prepare_germinators', 'Prepare the germinators and pour the seeds into the germinators'), ('collect_firewood', 'Collecting firewood'), ('measure_distance', 'To help measure distances between plants during transplanting'), ('sort_drying', 'Sort and spread the beans, cereals and other vegetables for drying'), ('put_cuttings', 'Putting cuttings on the mounds'), ('hold_bags', 'Holding bags or filling them with small containers for packaging de produits agricoles'), ('cover_products', 'Covering stored agricultural products with tarps'), ('shell_dehusk', 'To shell or dehusk seeds, plants and fruits by hand'), ('sowing', 'Sowing seeds'), ('transplant', 'Transplant or put in the ground the cuttings or plants'), ('harvest_legumes', 'Harvesting legumes, fruits and other leafy products (corn, beans, soybeans, various vegetables)'), ('none', 'None')], help_text='Select tasks performed in the last 7 days', max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='reading_response',
            field=models.CharField(blank=True, choices=[('can_read', 'Yes (he/she can read the sentences)'), ('simple_text', 'Only the simple text (text 1.)'), ('cannot_read', 'No'), ('refused', 'The child refuses to try')], help_text='Response to the reading task.', max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='sch_going_times',
            field=models.CharField(blank=True, choices=[('01', 'Once'), ('02', 'Twice'), ('03', 'Thrice'), ('04', 'Four times'), ('05', 'Five times')], help_text='How many times does the child go to school in a week?', max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='who_answers_child_unavailable',
            field=models.CharField(blank=True, choices=[('parents', 'The parents or legal guardians'), ('family_member', 'Another family member'), ('sibling', "One of the child's siblings"), ('other', 'Other')], max_length=20, null=True, verbose_name='Who is answering for the child (if not available)'),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='who_answers_child_unavailable_other',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Specify who is answering (if Other is selected)'),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='work_frequency',
            field=models.CharField(blank=True, choices=[('every_day', 'Every day'), ('4-5_days', '4-5 days'), ('2-3_days', '2-3 days'), ('once', 'Once')], help_text='How often has the child worked in the past 7 days?', max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='work_in_house',
            field=models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], help_text='In the past 7 days, has the child worked in the house?', max_length=3, null=True),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='work_on_cocoa',
            field=models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], help_text='In the past 7 days, has the child been working on the cocoa farm?', max_length=3, null=True),
        ),
        migrations.AlterField(
            model_name='childinhouseholdtbl',
            name='writing_response',
            field=models.CharField(blank=True, choices=[('can_write_both', 'Yes, he/she can write both sentences'), ('simple_text', 'Only the simple text (text 1.)'), ('cannot_write', 'No'), ('refused', 'The child refuses to try')], help_text='Response to the writing task.', max_length=20, null=True),
        ),
    ]
